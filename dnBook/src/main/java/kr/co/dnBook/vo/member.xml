<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.mlec.member.dao.MemberMapper"> 
       <select id="getMemberInfo1" parameterType="string" resultType="member">
    						 
    	select id, name, email, addr
    	  from mybatis_member
    	 where id = #{id}
    </select>
    
    <select id="getMemberInfo2" parameterType="member" resultType="member">
    	select id, name, email, addr
    	  from mybatis_member
    	 where name = #{name} 
    	   and email = #{email}
    </select>
    
    <select id="getMemberInfo3" parameterType="member" resultType="string">
    	select id
    	  from mybatis_member
    	 where name = #{name} 
    	   and email = #{email}
    </select>
    
    <select id="getMemberInfo4" resultType="int">
    	select count(*) 
    	  from mybatis_member
    </select>
    
    <!-- 실행 결과를 무엇으로 줄 것인지 type="member"로 설정한다. -->
    <!-- 자바 속성에 접근하기 위해 property사용  -->
    <!-- sql의join_date를 자바의   joinDate로 처리하겠다.-->
    <resultMap id="memberMap" type="member">
    	<result column="id" property="id" /> 
    	<result column="join_date" property="joinDate" /> 
    	<result column="name" property="name" />
    	<result column="email" property="email" />
    	<result column="addr" property="addr" />
    </resultMap>
    
    <!-- 
    	resultMap 속성을 사용시
    	resultMap 이라는 태그를 찾고
    	태그의 아이디가  memberMap 인 것을 선택한다.
     -->
    
    <select id="getMemberList1" resultType="member">
    	select id, join_date as joinDate
   		  from mybatis_member
    </select>
  
    <select id="getMemberList2" resultMap="memberMap">
    	select *
   		  from mybatis_member
    </select>
    
    <insert id="insertMember" parameterType="member">
    	insert into mybatis_member(id, name, addr, email) values (#{id}, #{name}, #{addr}, #{email})
    </insert>
    
    <update id="updateMember" parameterType="member">
    	update mybatis_member
    	   set addr=#{addr} 
    	 where id=#{id}
    </update>
    
    <delete id="deleteMember" parameterType="string">
    	delete 
    	  from mybatis_member
    	 where id = #{id}
    </delete>
    
    <select id="getMemberIteratorList" parameterType="member" resultMap="memberMap">
    	select *
    	  from mybatis_member
    	 where addr in <foreach item="addr" open="(" separator="," close=")" collection="addrs">
    	 					#{addr}
    	 			   </foreach>
    </select>
    
    <select id="getMemberDynamicList1" parameterType="member" resultMap="memberMap">
    	select *
    	  from mybatis_member
    	 <if test="id != null">
    	 where id = #{id}
    	 </if>
    </select>
    
    <select id="getMemberDynamicList2" parameterType="member" resultMap="memberMap">
    	select *
    	  from mybatis_member
    
   		<choose>
	    	 <when test="searchType == 'id'">
	    	 where id like '%'|| #{searchWord} || '%'
	    	 </when>
	    	 <when test="searchType == 'addr'">
	    	 where id like '%'|| #{searchWord} || '%'
	    	 </when>
    	</choose>
  
    </select>
    
    <select id="getMemberDynamicList3" parameterType="member" resultMap="memberMap">
    	select *
    	  from mybatis_member
     <where>
   		<choose>
	    	 <when test="searchType == 'id'">
	    	 id like '%'|| #{searchWord} || '%'
	    	 </when>
	    	 <when test="searchType == 'addr'">
	    	 where id like '%'|| #{searchWord} || '%'
	    	 </when>
    	</choose>
    </where>
    </select>
</mapper>
